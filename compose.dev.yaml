services:
  client:
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    container_name: tgc-client
    env_file: "./frontend/.env.development.local"
    environment:
      - NODE_ENV=development
    ports:
      - 5173:5173
    volumes:
      - ./frontend/index.html:/app/frontend/index.html
      - ./frontend/src/:/app/frontend/src/
      - ./frontend/public/:/app/frontend/public/
      - ./frontend/vite.config.ts:/app/frontend/vite.config.ts

  server:
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    container_name: tgc-server
    env_file: "./backend/.env"
    environment:
      - NODE_ENV=development
      - DB_HOST=db # override DB_HOST in .env (localhost by default when the backend is run without a Docker containter, but use service name when running the backend with Docker to connect to the database container)
    ports:
      - 3000:3000
    depends_on:
      db:
        condition: service_started
    volumes:
      - ./backend/src/:/app/backend/src/

  db:
    image: postgres
    shm_size: 128mb # set shared memory limit when using docker-compose
    container_name: tgc-db
    env_file: "./backend/.env"
    ports:
      - 5432:5432
    volumes:
      # - /var/lib/postgresql/data # anonymous volume (enough for local dev)
      - pgdata:/var/lib/postgresql/data # named volume (recommended for production)

volumes:
  pgdata:
    driver: local
